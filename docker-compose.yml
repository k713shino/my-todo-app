services:
  # PostgreSQL データベース（開発用）
  postgres:
    image: postgres:15-alpine
    container_name: todo-postgres
    environment:
      POSTGRES_DB: todoapp
      POSTGRES_USER: todouser
      POSTGRES_PASSWORD: todopass123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - todo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U todouser -d todoapp"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis（キャッシュ・セッション・Pub/Sub）
  redis:
    image: redis:7-alpine
    container_name: todo-redis
    command: redis-server --appendonly yes --requirepass ""
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - todo-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Next.js アプリケーション
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: todo-app
    ports:
      - "3000:3000"
    environment:
      # 🔴 実行時の環境変数設定
      - DATABASE_URL=postgresql://todouser:todopass123@postgres:5432/todoapp
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_SECRET=your-super-secret-key-change-this-in-production
      - NEXTAUTH_URL=http://localhost:3000
      - NODE_ENV=production
    networks:
      - todo-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Redis Commander (Redis管理ツール)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: todo-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - todo-network

  # pgAdmin (データベース管理ツール)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: todo-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@todo.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - todo-network

volumes:
  postgres_data:
  redis_data:

networks:
  todo-network:
    driver: bridge