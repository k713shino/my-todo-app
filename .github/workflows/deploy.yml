name: 本番デプロイ

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  test:
    name: テスト実行
    runs-on: ubuntu-latest
    
    steps:
      - name: チェックアウト
        uses: actions/checkout@v4
        
      - name: Node.js環境設定
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: 依存関係インストール
        run: npm ci
        
      - name: TypeScript型チェック
        run: npm run type-check || echo "型チェックスクリプトがない場合はスキップ"
        
      - name: ESLint実行
        run: npm run lint
        
      - name: Prismaクライアント生成
        run: npx prisma generate
        
      - name: ビルドテスト
        run: npm run build
        env:
          NEXTAUTH_SECRET: test-secret-for-build
          NEXTAUTH_URL: http://localhost:3000
          DATABASE_URL: postgresql://test:test@localhost:5432/test
          GITHUB_CLIENT_ID: test-client-id
          GITHUB_CLIENT_SECRET: test-client-secret
          GOOGLE_CLIENT_ID: test-google-client-id
          GOOGLE_CLIENT_SECRET: test-google-client-secret

  deploy-preview:
    name: プレビューデプロイ
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
      - name: チェックアウト
        uses: actions/checkout@v4
        
      - name: Vercelプレビューデプロイ
        run: |
          npm install -g vercel
          vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  deploy-production:
    name: 本番デプロイ
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: チェックアウト
        uses: actions/checkout@v4
        
      - name: Vercel本番デプロイ
        run: |
          npm install -g vercel
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  database-migration:
    name: データベース移行
    runs-on: ubuntu-latest
    needs: deploy-production
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: チェックアウト
        uses: actions/checkout@v4
        
      - name: Node.js環境設定
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: 依存関係インストール
        run: npm ci
        
      - name: Prismaデータベース同期
        run: npx prisma db push
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}